version: "3.8"

services:
  postgres:
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-bacterial_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-bacterial_classification}
    ports:
      - "${POSTGRES_HOST_PORT:-5437}:5432"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-bacterial_user} -d ${POSTGRES_DB:-bacterial_classification}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql://bacterial_user:password@postgres:5432/bacterial_classification
      - SECRET_KEY=supersecretkey0123456789abcdefghijklm
      - ENVIRONMENT=development
      - API_V1_STR=/api
      - PROJECT_NAME=Bacteria Classification API
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  scraper:
    build:
      context: ./scraper
      dockerfile: Dockerfile
    volumes:
      - ./scraper:/app
    environment:
      - DATABASE_URL=postgresql://bacterial_user:password@postgres:5432/bacterial_classification
      - SCRAPING_DELAY=2.0
      - SCRAPER_USER_AGENT=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network
    command: tail -f /dev/null

volumes:
  postgres_data:

networks:
  backend-network:
    driver: bridge
